#!/usr/bin/env php
<?php

array_shift($argv);
defined('DS') ? null : define('DS', DIRECTORY_SEPARATOR);

$task = empty($argv) ? false : array_shift($argv);
$task = !in_array($task,get_class_methods('Makelos')) ? 'help' : $task;

class Makelos
{
    var $repository = 'http://svn.akelos.org/plugins/admin';

    function help()
    {
        echo "\nValid commands are ".join(', ', get_class_methods('Pake'))."\n";
    }

    function test($options = array())
    {
        require_once(dirname(__FILE__).DS.'test'.DS.'admin.php');
    }

    function install()
    {
        $Installer =& $this->_getInstaller();
        $Installer->install();
    }

    function uninstall()
    {
        $Installer =& $this->_getInstaller();
        $Installer->uninstall();
    }

    function &_getInstaller()
    {
        $this->_includeDependencies();
        require_once(AK_APP_INSTALLERS_DIR.DS.'admin.php');
        $Installer =& new AdminInstaller();
        return $Installer;
    }

    function _includeDependencies()
    {
        include(dirname(__FILE__).str_repeat(DS.'..', 4).DS.'config'.DS.'config.php');
        require_once(AK_LIB_DIR.DS.'Ak.php');
        require_once(AK_LIB_DIR.DS.'AkObject.php');
        require_once(AK_LIB_DIR.DS.'AkInflector.php');
        defined('AK_SKIP_DB_CONNECTION') && AK_SKIP_DB_CONNECTION ? ($dsn='') : Ak::db(&$dsn);
        define('AK_APP_INSTALLERS_DIR', dirname(__FILE__).DS.'installer');
        require_once(AK_LIB_DIR.DS.'AkInstaller.php');
        require_once(AK_LIB_DIR.DS.'utils'.DS.'generators'.DS.'AkelosGenerator.php');
    }
}

$Makelos = new Makelos();
$Makelos->$task(@$argv);


?>
